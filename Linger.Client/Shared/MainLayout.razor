@using Microsoft.AspNetCore.Components.Routing
@inherits LayoutComponentBase
@inject AppState AppState
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h6" Class="ml-3">Linger 应用</MudText>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <MudText Typo="Typo.body1" Class="mr-4">欢迎, @context.User.Identity?.Name</MudText>
                <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="Logout">注销</MudButton>
            </Authorized>
        </AuthorizeView>
    </MudAppBar>
    
    <MudDrawer @bind-Open="@_drawerOpen" Elevation="2">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Linger</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <AuthorizeView>
                <Authorized>
                    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">仪表盘</MudNavLink>
                    <MudNavLink Href="data" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">数据列表</MudNavLink>
                </Authorized>
            </AuthorizeView>
        </MudNavMenu>
    </MudDrawer>
    
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="my-4 pt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        NavigationManager.NavigateTo("/login", true);
    }

    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }
}
