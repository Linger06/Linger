@page "/data"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject ApiService ApiService
@inject ISnackbar Snackbar

<MudText Typo="Typo.h3" Class="mb-4">数据列表</MudText>

@if (loading)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudTable Items="@items" Hover="true" Dense="true" Loading="@loading" LoadingProgressColor="Color.Primary">
        <HeaderContent>
            <MudTh>ID</MudTh>
            <MudTh>名称</MudTh>
            <MudTh>描述</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="ID">@context.Id</MudTd>
            <MudTd DataLabel="名称">@context.Name</MudTd>
            <MudTd DataLabel="描述">@context.Description</MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    private bool loading = true;
    private List<DataItem> items = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            items = await ApiService.GetDataAsync<List<DataItem>>("api/data");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"数据列表错误详情: {ex}");
            Snackbar.Add($"获取数据失败: {ex.Message}", Severity.Error);
        }
        finally
        {
            loading = false;
        }
    }

    public class DataItem
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
    }
}
